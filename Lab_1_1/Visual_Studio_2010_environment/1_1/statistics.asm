; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	I:\test_git\Lab_1_1\Visual_Studio_2010_environment\1_1\Source_code\statistics.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0MB@JOBFCL@The?5mean?5is?5the?5average?5value?5of@ ; `string'
PUBLIC	??_C@_0BK@FCNKEFMP@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6?5?5Mean?6?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6?$AA@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	?mean@@YAXQBHH@Z				; mean
EXTRN	__imp__printf:PROC
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT ??_C@_0MB@JOBFCL@The?5mean?5is?5the?5average?5value?5of@
; File i:\test_git\lab_1_1\visual_studio_2010_environment\1_1\source_code\statistics.cpp
CONST	SEGMENT
??_C@_0MB@JOBFCL@The?5mean?5is?5the?5average?5value?5of@ DB 'The mean is '
	DB	'the average value of the data', 0aH, 'items. The mean is equa'
	DB	'l to the total of', 0aH, 'all the data items divided by the n'
	DB	'umber', 0aH, 'of data items ( %d ). The mean value for', 0aH, 't'
	DB	'his run is: %f / %d = %f', 0aH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FCNKEFMP@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6?5?5Mean?6?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6?$AA@
CONST	SEGMENT
??_C@_0BK@FCNKEFMP@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6?5?5Mean?6?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6?$AA@ DB '*'
	DB	'*******', 0aH, '  Mean', 0aH, '********', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ?mean@@YAXQBHH@Z
_TEXT	SEGMENT
_i$3866 = -24						; size = 4
_total$ = -12						; size = 8
_dataArray$ = 8						; size = 4
_arraySize$ = 12					; size = 4
?mean@@YAXQBHH@Z PROC					; mean, COMDAT
; Line 7
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 8
	fldz
	fstp	QWORD PTR _total$[ebp]
; Line 10
	mov	esi, esp
	push	OFFSET ??_C@_0BK@FCNKEFMP@?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6?5?5Mean?6?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 13
	mov	DWORD PTR _i$3866[ebp], 0
	jmp	SHORT $LN3@mean
$LN2@mean:
	mov	eax, DWORD PTR _i$3866[ebp]
	add	eax, 1
	mov	DWORD PTR _i$3866[ebp], eax
$LN3@mean:
	mov	eax, DWORD PTR _i$3866[ebp]
	cmp	eax, DWORD PTR _arraySize$[ebp]
	jge	SHORT $LN1@mean
; Line 14
	mov	eax, DWORD PTR _i$3866[ebp]
	mov	ecx, DWORD PTR _dataArray$[ebp]
	fild	DWORD PTR [ecx+eax*4]
	fadd	QWORD PTR _total$[ebp]
	fstp	QWORD PTR _total$[ebp]
	jmp	SHORT $LN2@mean
$LN1@mean:
; Line 22
	fild	DWORD PTR _arraySize$[ebp]
	fdivr	QWORD PTR _total$[ebp]
	mov	esi, esp
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _arraySize$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _total$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _arraySize$[ebp]
	push	ecx
	push	OFFSET ??_C@_0MB@JOBFCL@The?5mean?5is?5the?5average?5value?5of@
	call	DWORD PTR __imp__printf
	add	esp, 28					; 0000001cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 23
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?mean@@YAXQBHH@Z ENDP					; mean
_TEXT	ENDS
PUBLIC	??_C@_0GC@FKHNEHLE@?6?6The?5median?5is?5the?5?$CFd?9th?5elemen@ ; `string'
PUBLIC	??_C@_0BG@FBLMKBPK@?6?6The?5sorted?5array?5is?$AA@ ; `string'
PUBLIC	??_C@_0DJ@FMIJHIBF@?6?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6?5Median?6?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6The?5u@ ; `string'
PUBLIC	?median@@YAXQAHH@Z				; median
EXTRN	?sort@@YAXQAHH@Z:PROC				; sort
EXTRN	?printArray@@YAXQBHH@Z:PROC			; printArray
;	COMDAT ??_C@_0GC@FKHNEHLE@?6?6The?5median?5is?5the?5?$CFd?9th?5elemen@
CONST	SEGMENT
??_C@_0GC@FKHNEHLE@?6?6The?5median?5is?5the?5?$CFd?9th?5elemen@ DB 0aH, 0aH
	DB	'The median is the %d-th element of', 0aH, 'the sorted %d elem'
	DB	'ent array.', 0aH, 'For this run the median is %d', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FBLMKBPK@?6?6The?5sorted?5array?5is?$AA@
CONST	SEGMENT
??_C@_0BG@FBLMKBPK@?6?6The?5sorted?5array?5is?$AA@ DB 0aH, 0aH, 'The sort'
	DB	'ed array is', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@FMIJHIBF@?6?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6?5Median?6?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6The?5u@
CONST	SEGMENT
??_C@_0DJ@FMIJHIBF@?6?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6?5Median?6?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6The?5u@ DB 0aH
	DB	'********', 0aH, ' Median', 0aH, '********', 0aH, 'The unsorte'
	DB	'd array of data is', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?median@@YAXQAHH@Z
_TEXT	SEGMENT
_dataArray$ = 8						; size = 4
_arraySize$ = 12					; size = 4
?median@@YAXQAHH@Z PROC					; median, COMDAT
; Line 27
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 28
	mov	esi, esp
	push	OFFSET ??_C@_0DJ@FMIJHIBF@?6?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6?5Median?6?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6The?5u@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 30
	mov	eax, DWORD PTR _arraySize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dataArray$[ebp]
	push	ecx
	call	?printArray@@YAXQBHH@Z			; printArray
	add	esp, 8
; Line 32
	mov	eax, DWORD PTR _arraySize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dataArray$[ebp]
	push	ecx
	call	?sort@@YAXQAHH@Z			; sort
	add	esp, 8
; Line 34
	mov	esi, esp
	push	OFFSET ??_C@_0BG@FBLMKBPK@?6?6The?5sorted?5array?5is?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 35
	mov	eax, DWORD PTR _arraySize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dataArray$[ebp]
	push	ecx
	call	?printArray@@YAXQBHH@Z			; printArray
	add	esp, 8
; Line 40
	mov	eax, DWORD PTR _arraySize$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	esi, esp
	mov	ecx, DWORD PTR _dataArray$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR _arraySize$[ebp]
	push	eax
	mov	eax, DWORD PTR _arraySize$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	push	eax
	push	OFFSET ??_C@_0GC@FKHNEHLE@?6?6The?5median?5is?5the?5?$CFd?9th?5elemen@
	call	DWORD PTR __imp__printf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 41
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?median@@YAXQAHH@Z ENDP					; median
_TEXT	ENDS
END
