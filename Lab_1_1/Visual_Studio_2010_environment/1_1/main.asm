; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	I:\test_git\Lab_1_1\Visual_Studio_2010_environment\1_1\Source_code\main.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?mode@@YAXQAH0H@Z				; mode
PUBLIC	__$ArrayPad$
PUBLIC	_main
EXTRN	?median@@YAXQAHH@Z:PROC				; median
EXTRN	?mean@@YAXQBHH@Z:PROC				; mean
EXTRN	?readFile@@YAXPAHQAH@Z:PROC			; readFile
EXTRN	___security_cookie:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File i:\test_git\lab_1_1\visual_studio_2010_environment\1_1\source_code\main.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _main
_TEXT	SEGMENT
_data$ = -668						; size = 600
_frequency$ = -60					; size = 40
_dataSize$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_main	PROC						; COMDAT
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 864				; 00000360H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-864]
	mov	ecx, 216				; 000000d8H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 52
	mov	DWORD PTR _frequency$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _frequency$[ebp+4], eax
	mov	DWORD PTR _frequency$[ebp+8], eax
	mov	DWORD PTR _frequency$[ebp+12], eax
	mov	DWORD PTR _frequency$[ebp+16], eax
	mov	DWORD PTR _frequency$[ebp+20], eax
	mov	DWORD PTR _frequency$[ebp+24], eax
	mov	DWORD PTR _frequency$[ebp+28], eax
	mov	DWORD PTR _frequency$[ebp+32], eax
	mov	DWORD PTR _frequency$[ebp+36], eax
; Line 72
	lea	eax, DWORD PTR _data$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dataSize$[ebp]
	push	ecx
	call	?readFile@@YAXPAHQAH@Z			; readFile
	add	esp, 8
; Line 76
	mov	eax, DWORD PTR _dataSize$[ebp]
	push	eax
	lea	ecx, DWORD PTR _data$[ebp]
	push	ecx
	call	?mean@@YAXQBHH@Z			; mean
	add	esp, 8
; Line 77
	mov	eax, DWORD PTR _dataSize$[ebp]
	push	eax
	lea	ecx, DWORD PTR _data$[ebp]
	push	ecx
	call	?median@@YAXQAHH@Z			; median
	add	esp, 8
; Line 78
	mov	eax, DWORD PTR _dataSize$[ebp]
	push	eax
	lea	ecx, DWORD PTR _data$[ebp]
	push	ecx
	lea	edx, DWORD PTR _frequency$[ebp]
	push	edx
	call	?mode@@YAXQAH0H@Z			; mode
	add	esp, 12					; 0000000cH
; Line 80
	xor	eax, eax
; Line 81
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 864				; 00000360H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@main:
	DD	3
	DD	$LN6@main
$LN6@main:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@main
	DD	-60					; ffffffc4H
	DD	40					; 00000028H
	DD	$LN4@main
	DD	-668					; fffffd64H
	DD	600					; 00000258H
	DD	$LN5@main
$LN5@main:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN4@main:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	113					; 00000071H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	121					; 00000079H
	DB	0
$LN3@main:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
_main	ENDP
_TEXT	ENDS
PUBLIC	??_C@_0FL@DEDBOCDM@The?5mode?5is?5the?5most?5frequent?5va@ ; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_01NBENCBCI@?$CK?$AA@			; `string'
PUBLIC	??_C@_0BB@FGILDFIG@?$CF4d?$CF10d?5?5?5?5?5?5?5?5?5?$AA@ ; `string'
PUBLIC	??_C@_0IE@PLIHLJHJ@Data?5?5Frequency?5?5?5?5?5?5?5Histogram?6@ ; `string'
PUBLIC	??_C@_0BL@EGFMIEMA@?6?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6?5?5Mode?6?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6?$AA@ ; `string'
EXTRN	__imp__printf:PROC
;	COMDAT ??_C@_0FL@DEDBOCDM@The?5mode?5is?5the?5most?5frequent?5va@
CONST	SEGMENT
??_C@_0FL@DEDBOCDM@The?5mode?5is?5the?5most?5frequent?5va@ DB 'The mode i'
	DB	's the most frequent value.', 0aH, 'For this run the mode is %'
	DB	'd which occurred %d times.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01NBENCBCI@?$CK?$AA@
CONST	SEGMENT
??_C@_01NBENCBCI@?$CK?$AA@ DB '*', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FGILDFIG@?$CF4d?$CF10d?5?5?5?5?5?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_0BB@FGILDFIG@?$CF4d?$CF10d?5?5?5?5?5?5?5?5?5?$AA@ DB '%4d%10d      '
	DB	'   ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0IE@PLIHLJHJ@Data?5?5Frequency?5?5?5?5?5?5?5Histogram?6@
CONST	SEGMENT
??_C@_0IE@PLIHLJHJ@Data?5?5Frequency?5?5?5?5?5?5?5Histogram?6@ DB 'Data  '
	DB	'Frequency       Histogram', 0aH, '                           '
	DB	'     1    1    2    2', 0aH, '                           5   '
	DB	' 0    5    0    5', 0aH, 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EGFMIEMA@?6?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6?5?5Mode?6?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6?$AA@
CONST	SEGMENT
??_C@_0BL@EGFMIEMA@?6?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6?5?5Mode?6?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6?$AA@ DB 0aH
	DB	'********', 0aH, '  Mode', 0aH, '********', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?mode@@YAXQAH0H@Z
_TEXT	SEGMENT
_modeValue$ = -56					; size = 4
_largest$ = -44						; size = 4
_rating$ = -32						; size = 4
_k$ = -20						; size = 4
_j$ = -8						; size = 4
_freq$ = 8						; size = 4
_dataArray$ = 12					; size = 4
_arraySize$ = 16					; size = 4
?mode@@YAXQAH0H@Z PROC					; mode, COMDAT
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 93
	mov	DWORD PTR _largest$[ebp], 0
; Line 94
	mov	DWORD PTR _modeValue$[ebp], 0
; Line 96
	mov	esi, esp
	push	OFFSET ??_C@_0BL@EGFMIEMA@?6?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6?5?5Mode?6?$CK?$CK?$CK?$CK?$CK?$CK?$CK?$CK?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 100
	mov	DWORD PTR _rating$[ebp], 1
	jmp	SHORT $LN13@mode
$LN12@mode:
	mov	eax, DWORD PTR _rating$[ebp]
	add	eax, 1
	mov	DWORD PTR _rating$[ebp], eax
$LN13@mode:
	cmp	DWORD PTR _rating$[ebp], 9
	jg	SHORT $LN11@mode
; Line 101
	mov	eax, DWORD PTR _rating$[ebp]
	mov	ecx, DWORD PTR _freq$[ebp]
	mov	DWORD PTR [ecx+eax*4], 0
; Line 102
	jmp	SHORT $LN12@mode
$LN11@mode:
; Line 105
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN10@mode
$LN9@mode:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN10@mode:
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _arraySize$[ebp]
	jge	SHORT $LN8@mode
; Line 106
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _dataArray$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _freq$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	add	ecx, 1
	mov	edx, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR _dataArray$[ebp]
	mov	edx, DWORD PTR [eax+edx*4]
	mov	eax, DWORD PTR _freq$[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
; Line 107
	jmp	SHORT $LN9@mode
$LN8@mode:
; Line 112
	mov	esi, esp
	push	OFFSET ??_C@_0IE@PLIHLJHJ@Data?5?5Frequency?5?5?5?5?5?5?5Histogram?6@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 115
	mov	DWORD PTR _rating$[ebp], 1
	jmp	SHORT $LN7@mode
$LN6@mode:
	mov	eax, DWORD PTR _rating$[ebp]
	add	eax, 1
	mov	DWORD PTR _rating$[ebp], eax
$LN7@mode:
	cmp	DWORD PTR _rating$[ebp], 9
	jg	$LN5@mode
; Line 116
	mov	esi, esp
	mov	eax, DWORD PTR _rating$[ebp]
	mov	ecx, DWORD PTR _freq$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR _rating$[ebp]
	push	eax
	push	OFFSET ??_C@_0BB@FGILDFIG@?$CF4d?$CF10d?5?5?5?5?5?5?5?5?5?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 119
	mov	eax, DWORD PTR _rating$[ebp]
	mov	ecx, DWORD PTR _freq$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	cmp	edx, DWORD PTR _largest$[ebp]
	jle	SHORT $LN4@mode
; Line 121
	mov	eax, DWORD PTR _rating$[ebp]
	mov	ecx, DWORD PTR _freq$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _largest$[ebp], edx
; Line 122
	mov	eax, DWORD PTR _rating$[ebp]
	mov	DWORD PTR _modeValue$[ebp], eax
$LN4@mode:
; Line 126
	mov	DWORD PTR _k$[ebp], 1
	jmp	SHORT $LN3@mode
$LN2@mode:
	mov	eax, DWORD PTR _k$[ebp]
	add	eax, 1
	mov	DWORD PTR _k$[ebp], eax
$LN3@mode:
	mov	eax, DWORD PTR _rating$[ebp]
	mov	ecx, DWORD PTR _freq$[ebp]
	mov	edx, DWORD PTR _k$[ebp]
	cmp	edx, DWORD PTR [ecx+eax*4]
	jg	SHORT $LN1@mode
; Line 127
	mov	esi, esp
	push	OFFSET ??_C@_01NBENCBCI@?$CK?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@mode
$LN1@mode:
; Line 128
	mov	esi, esp
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 129
	jmp	$LN6@mode
$LN5@mode:
; Line 134
	mov	esi, esp
	mov	eax, DWORD PTR _largest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _modeValue$[ebp]
	push	ecx
	push	OFFSET ??_C@_0FL@DEDBOCDM@The?5mode?5is?5the?5most?5frequent?5va@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 135
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?mode@@YAXQAH0H@Z ENDP					; mode
_TEXT	ENDS
END
